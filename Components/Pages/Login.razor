@page "/login"
@using PISA_APP.Services
@inject AuthenticationService AuthService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>เข้าสู่ระบบ - PISA</PageTitle>

<div class="min-vh-100 d-flex align-items-center justify-content-center bg-light">
    <div class="card shadow" style="width: 400px;">
        <div class="card-body p-5">
            <div class="text-center mb-4">
                <h2 class="text-primary">ระบบข้อสอบออนไลน์</h2>
                <p class="text-muted">กรุณาเข้าสู่ระบบ</p>
            </div>

            <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
                <DataAnnotationsValidator />
                
                @if (!string.IsNullOrEmpty(errorMessage))
                {
                    <div class="alert alert-danger" role="alert">
                        @errorMessage
                    </div>
                }

                <div class="mb-3">
                    <label for="username" class="form-label">ชื่อผู้ใช้</label>
                    <InputText @bind-Value="loginModel.Username" class="form-control" id="username" placeholder="กรอกชื่อผู้ใช้" />
                    <ValidationMessage For="@(() => loginModel.Username)" />
                </div>

                <div class="mb-3">
                    <label for="password" class="form-label">รหัสผ่าน</label>
                    <InputText @bind-Value="loginModel.Password" type="password" class="form-control" id="password" placeholder="กรอกรหัสผ่าน" />
                    <ValidationMessage For="@(() => loginModel.Password)" />
                </div>

                <div class="d-grid">
                    <button type="submit" class="btn btn-primary" disabled="@isLoading">
                        @if (isLoading)
                        {
                            <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                            <span>กำลังเข้าสู่ระบบ...</span>
                        }
                        else
                        {
                            <span>เข้าสู่ระบบ</span>
                        }
                    </button>
                </div>
            </EditForm>

            <div class="mt-4">
                <div class="card bg-light">
                    <div class="card-body p-3">
                        <h6 class="card-title mb-2">
                            <i class="fas fa-info-circle text-info"></i> บัญชีทดสอบ
                        </h6>
                        <div class="row">
                            <div class="col-12 mb-2">
                                <small class="text-muted">
                                    <strong class="text-danger">Admin:</strong><br>
                                    <code>admin01</code> / <code>admin123</code>
                                </small>
                            </div>
                            <div class="col-12 mb-2">
                                <small class="text-muted">
                                    <strong class="text-warning">Teacher:</strong><br>
                                    <code>teacher001</code> / <code>teacher123</code>
                                </small>
                            </div>
                            <div class="col-12">
                                <small class="text-muted">
                                    <strong class="text-primary">Student:</strong><br>
                                    <code>student001</code> / <code>student123</code>
                                </small>
                            </div>
                        </div>
                        <div class="mt-2">
                            <small class="text-muted">
                                <i class="fas fa-lightbulb text-warning"></i>
                                <strong>เคล็ดลับ:</strong> มีบัญชี Admin 5 คน (admin01-05), Teacher 25 คน (teacher001-025), Student 120 คน (student001-120)
                            </small>
                        </div>
                        <div class="mt-2">
                            <div class="d-grid gap-1">
                                <button type="button" class="btn btn-outline-danger btn-sm" @onclick="@(() => QuickLogin("admin01", "admin123"))">
                                    <i class="fas fa-user-shield"></i> Quick Login Admin
                                </button>
                                <button type="button" class="btn btn-outline-warning btn-sm" @onclick="@(() => QuickLogin("teacher001", "teacher123"))">
                                    <i class="fas fa-chalkboard-teacher"></i> Quick Login Teacher
                                </button>
                                <button type="button" class="btn btn-outline-primary btn-sm" @onclick="@(() => QuickLogin("student001", "student123"))">
                                    <i class="fas fa-user-graduate"></i> Quick Login Student
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private LoginModel loginModel = new();
    private string errorMessage = string.Empty;
    private bool isLoading = false;

    protected override async Task OnInitializedAsync()
    {
        if (AuthService.IsAuthenticated)
        {
            Navigation.NavigateTo("/dashboard");
        }
    }

    private async Task HandleLogin()
    {
        try
        {
            isLoading = true;
            errorMessage = string.Empty;

            var success = await AuthService.LoginAsync(loginModel.Username, loginModel.Password);

            if (success)
            {
                Navigation.NavigateTo("/dashboard");
            }
            else
            {
                errorMessage = "ชื่อผู้ใช้หรือรหัสผ่านไม่ถูกต้อง";
            }
        }
        catch (Exception ex)
        {
            errorMessage = "เกิดข้อผิดพลาดในการเข้าสู่ระบบ";
        }
        finally
        {
            isLoading = false;
        }
    }

    private async Task QuickLogin(string username, string password)
    {
        loginModel.Username = username;
        loginModel.Password = password;
        await HandleLogin();
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "กรุณากรอกชื่อผู้ใช้")]
        public string Username { get; set; } = string.Empty;

        [Required(ErrorMessage = "กรุณากรอกรหัสผ่าน")]
        public string Password { get; set; } = string.Empty;
    }
}