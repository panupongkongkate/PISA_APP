@page "/change-password"
@inject AuthenticationService AuthService
@inject MockDataService DataService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>แก้ไขรหัสผ่าน - PISA</PageTitle>

@if (!AuthService.IsAuthenticated)
{
    Navigation.NavigateTo("/login");
    return;
}

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="h3">
                        <i class="fas fa-lock me-2"></i>
                        แก้ไขรหัสผ่าน
                    </h1>
                    <p class="text-muted">เปลี่ยนรหัสผ่านของคุณเพื่อความปลอดภัย</p>
                </div>
            </div>
        </div>
    </div>

    <div class="row justify-content-center">
        <div class="col-md-6 col-lg-5">
            <div class="card shadow">
                <div class="card-header bg-primary text-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-key me-2"></i>
                        เปลี่ยนรหัสผ่าน
                    </h5>
                </div>
                <div class="card-body">
                    <!-- Current User Info -->
                    <div class="alert alert-info d-flex align-items-center mb-4">
                        <i class="fas fa-info-circle me-2"></i>
                        <div>
                            <strong>ผู้ใช้:</strong> @AuthService.CurrentUser?.FullName<br>
                            <strong>ชื่อผู้ใช้:</strong> @AuthService.CurrentUser?.Username
                        </div>
                    </div>

                    @if (!string.IsNullOrEmpty(errorMessage))
                    {
                        <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            <i class="fas fa-exclamation-triangle me-2"></i>
                            @errorMessage
                            <button type="button" class="btn-close" @onclick="() => errorMessage = string.Empty"></button>
                        </div>
                    }

                    @if (!string.IsNullOrEmpty(successMessage))
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            <i class="fas fa-check-circle me-2"></i>
                            @successMessage
                            <button type="button" class="btn-close" @onclick="() => successMessage = string.Empty"></button>
                        </div>
                    }

                    <EditForm Model="@changePasswordModel" OnValidSubmit="@HandleChangePassword">
                        <DataAnnotationsValidator />

                        <div class="mb-3">
                            <label for="currentPassword" class="form-label">
                                <i class="fas fa-lock me-1"></i>
                                รหัสผ่านปัจจุบัน <span class="text-danger">*</span>
                            </label>
                            <div class="input-group">
                                <InputText @bind-Value="changePasswordModel.CurrentPassword" 
                                          type="@(showCurrentPassword ? "text" : "password")" 
                                          class="form-control" 
                                          id="currentPassword" 
                                          placeholder="กรอกรหัสผ่านปัจจุบัน" />
                                <button type="button" class="btn btn-outline-secondary" @onclick="() => showCurrentPassword = !showCurrentPassword">
                                    <i class="fas @(showCurrentPassword ? "fa-eye-slash" : "fa-eye")"></i>
                                </button>
                            </div>
                            <ValidationMessage For="@(() => changePasswordModel.CurrentPassword)" />
                        </div>

                        <div class="mb-3">
                            <label for="newPassword" class="form-label">
                                <i class="fas fa-key me-1"></i>
                                รหัสผ่านใหม่ <span class="text-danger">*</span>
                            </label>
                            <div class="input-group">
                                <InputText @bind-Value="changePasswordModel.NewPassword" 
                                          type="@(showNewPassword ? "text" : "password")" 
                                          class="form-control" 
                                          id="newPassword" 
                                          placeholder="กรอกรหัสผ่านใหม่" />
                                <button type="button" class="btn btn-outline-secondary" @onclick="() => showNewPassword = !showNewPassword">
                                    <i class="fas @(showNewPassword ? "fa-eye-slash" : "fa-eye")"></i>
                                </button>
                            </div>
                            <ValidationMessage For="@(() => changePasswordModel.NewPassword)" />
                            <div class="form-text">
                                <small class="text-muted">
                                    <i class="fas fa-info-circle me-1"></i>
                                    รหัสผ่านควรมีความยาวอย่างน้อย 6 ตัวอักษร
                                </small>
                            </div>
                        </div>

                        <div class="mb-4">
                            <label for="confirmPassword" class="form-label">
                                <i class="fas fa-check me-1"></i>
                                ยืนยันรหัสผ่านใหม่ <span class="text-danger">*</span>
                            </label>
                            <div class="input-group">
                                <InputText @bind-Value="changePasswordModel.ConfirmPassword" 
                                          type="@(showConfirmPassword ? "text" : "password")" 
                                          class="form-control" 
                                          id="confirmPassword" 
                                          placeholder="กรอกรหัสผ่านใหม่อีกครั้ง" />
                                <button type="button" class="btn btn-outline-secondary" @onclick="() => showConfirmPassword = !showConfirmPassword">
                                    <i class="fas @(showConfirmPassword ? "fa-eye-slash" : "fa-eye")"></i>
                                </button>
                            </div>
                            <ValidationMessage For="@(() => changePasswordModel.ConfirmPassword)" />
                        </div>

                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary" disabled="@isLoading">
                                @if (isLoading)
                                {
                                    <span class="spinner-border spinner-border-sm me-2" role="status"></span>
                                    <span>กำลังเปลี่ยน...</span>
                                }
                                else
                                {
                                    <i class="fas fa-save me-2"></i>
                                    <span>เปลี่ยนรหัสผ่าน</span>
                                }
                            </button>
                            <a href="/profile" class="btn btn-outline-secondary">
                                <i class="fas fa-arrow-left me-2"></i>
                                กลับไปโปรไฟล์
                            </a>
                        </div>
                    </EditForm>
                </div>
            </div>

            <!-- Security Tips -->
            <div class="card mt-4">
                <div class="card-header">
                    <h6 class="card-title mb-0">
                        <i class="fas fa-shield-alt me-2"></i>
                        เคล็ดลับความปลอดภัย
                    </h6>
                </div>
                <div class="card-body">
                    <ul class="list-unstyled mb-0">
                        <li class="mb-2">
                            <i class="fas fa-check-circle text-success me-2"></i>
                            ใช้รหัสผ่านที่มีความยาวอย่างน้อย 8 ตัวอักษร
                        </li>
                        <li class="mb-2">
                            <i class="fas fa-check-circle text-success me-2"></i>
                            ผสมผสานตัวอักษรใหญ่ เล็ก ตัวเลข และสัญลักษณ์
                        </li>
                        <li class="mb-2">
                            <i class="fas fa-check-circle text-success me-2"></i>
                            หลีกเลี่ยงการใช้ข้อมูลส่วนตัวที่เดาได้ง่าย
                        </li>
                        <li>
                            <i class="fas fa-check-circle text-success me-2"></i>
                            เปลี่ยนรหัสผ่านเป็นประจำ
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private ChangePasswordModel changePasswordModel = new();
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;
    private bool isLoading = false;
    
    private bool showCurrentPassword = false;
    private bool showNewPassword = false;
    private bool showConfirmPassword = false;

    private async Task HandleChangePassword()
    {
        try
        {
            isLoading = true;
            errorMessage = string.Empty;
            successMessage = string.Empty;

            // Validate current user
            if (AuthService.CurrentUser == null)
            {
                errorMessage = "ไม่พบข้อมูลผู้ใช้";
                return;
            }

            // Check current password
            if (AuthService.CurrentUser.Password != changePasswordModel.CurrentPassword)
            {
                errorMessage = "รหัสผ่านปัจจุบันไม่ถูกต้อง";
                return;
            }

            // Check if new password is different from current
            if (changePasswordModel.NewPassword == changePasswordModel.CurrentPassword)
            {
                errorMessage = "รหัสผ่านใหม่ต้องแตกต่างจากรหัสผ่านปัจจุบัน";
                return;
            }

            // Update password
            var currentUser = AuthService.CurrentUser;
            currentUser.Password = changePasswordModel.NewPassword;
            DataService.UpdateUser(currentUser);

            successMessage = "เปลี่ยนรหัสผ่านเรียบร้อยแล้ว";
            
            // Clear form
            changePasswordModel = new();
            
            // Auto redirect after 2 seconds
            await Task.Delay(2000);
            Navigation.NavigateTo("/profile");
        }
        catch (Exception ex)
        {
            errorMessage = "เกิดข้อผิดพลาดในการเปลี่ยนรหัสผ่าน";
        }
        finally
        {
            isLoading = false;
        }
    }

    public class ChangePasswordModel
    {
        [Required(ErrorMessage = "กรุณากรอกรหัสผ่านปัจจุบัน")]
        public string CurrentPassword { get; set; } = string.Empty;

        [Required(ErrorMessage = "กรุณากรอกรหัสผ่านใหม่")]
        [MinLength(6, ErrorMessage = "รหัสผ่านต้องมีความยาวอย่างน้อย 6 ตัวอักษร")]
        public string NewPassword { get; set; } = string.Empty;

        [Required(ErrorMessage = "กรุณายืนยันรหัสผ่านใหม่")]
        [Compare(nameof(NewPassword), ErrorMessage = "รหัสผ่านใหม่และการยืนยันไม่ตรงกัน")]
        public string ConfirmPassword { get; set; } = string.Empty;
    }
}